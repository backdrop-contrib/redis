<?php

class Redis_Tests_Admin_VariableTestCase extends BackdropWebTestCase
{
    public static function getInfo()
    {
        return array(
            'name'  => 'Redis variables',
            'description'  => 'Checks that Redis module variables are correctly type hinted when saved.',
            'group' => 'Redis',
        );
    }

    protected $adminUser;

    public function setUp()
    {
        parent::setUp('redis');
    }

    public function testSave()
    {
        $this->adminUser = $this->backdropCreateUser(array('administer site configuration'));
        $this->backdropLogin($this->adminUser);

        // Tests port is an int.
        $this->backdropGet('admin/config/development/performance/redis');
        $edit = array(
            'redis_client_base'      => '',
            'redis_client_port'      => '1234',
            'redis_client_host'      => 'localhost',
            'redis_client_interface' => '',
        );
        $this->backdropPost('admin/config/development/performance/redis', $edit, t('Save configuration'));

        // Force variable cache to refresh.
        $test = variable_initialize();
        $settings = &$GLOBALS['conf'];

        $this->assertFalse(array_key_exists('redis_client_base', $settings), "Empty int value has been removed");
        $this->assertFalse(array_key_exists('redis_client_interface', $settings), "Empty string value has been removed");
        $this->assertIdentical($settings['redis_client_port'], 1234, "Saved int is an int");
        $this->assertIdentical($settings['redis_client_host'], 'localhost', "Saved string is a string");

        $this->backdropGet('admin/config/development/performance/redis');
        $edit = array(
            'redis_client_base'      => '0',
            'redis_client_port'      => '1234',
            'redis_client_host'      => 'localhost',
            'redis_client_interface' => '',
        );
        $this->backdropPost('admin/config/development/performance/redis', $edit, t('Save configuration'));

        // Force variable cache to refresh.
        $test = variable_initialize();
        $settings = &$GLOBALS['conf'];

        $this->assertIdentical($settings['redis_client_base'], 0, "Saved 0 valueed int is an int");
    }
}